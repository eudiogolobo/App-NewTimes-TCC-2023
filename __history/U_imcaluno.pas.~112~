unit U_imcaluno;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Buttons, Vcl.StdCtrls,
  Vcl.Imaging.pngimage, Vcl.ExtCtrls, Vcl.DBCtrls, Vcl.Mask, Data.DB, Vcl.Grids,dateutils,
  Vcl.DBGrids;

type
  Tfrm_imaluno = class(TForm)
    Panel2: TPanel;
    Label17: TLabel;
    Label4: TLabel;
    Label12: TLabel;
    Panel7: TPanel;
    Label3: TLabel;
    Panel1: TPanel;
    DBEdit1: TDBEdit;
    Panel9: TPanel;
    Label1: TLabel;
    Panel10: TPanel;
    DBEdit3: TDBEdit;
    Panel11: TPanel;
    Label6: TLabel;
    Panel12: TPanel;
    DBEdit5: TDBEdit;
    Panel35: TPanel;
    Label2: TLabel;
    Panel3: TPanel;
    Panel4: TPanel;
    Panel5: TPanel;
    Label5: TLabel;
    cb1: TComboBox;
    Panel6: TPanel;
    Label7: TLabel;
    ComboBox2: TComboBox;
    Panel8: TPanel;
    Label8: TLabel;
    DBEdit6: TDBEdit;
    Panel17: TPanel;
    Panel13: TPanel;
    Label9: TLabel;
    DBEdit2: TDBEdit;
    Panel15: TPanel;
    Panel14: TPanel;
    Label10: TLabel;
    DBEdit4: TDBEdit;
    Panel16: TPanel;
    pnl_salvar: TPanel;
    btn_salvar: TSpeedButton;
    pnl_cancelar: TPanel;
    btn_cancelar: TSpeedButton;
    Panel18: TPanel;
    Label11: TLabel;
    DBEdit7: TDBEdit;
    Panel19: TPanel;
    Panel20: TPanel;
    Panel21: TPanel;
    Label13: TLabel;
    MaskEdit1: TMaskEdit;
    Panel22: TPanel;
    Label14: TLabel;
    ComboBox3: TComboBox;
    Panel23: TPanel;
    Panel24: TPanel;
    Label16: TLabel;
    ComboBox1: TComboBox;
    Label15: TLabel;
    ScrollBar1: TScrollBar;

    procedure SpeedButton2Click(Sender: TObject);
    procedure Panel1MouseEnter(Sender: TObject);
    procedure Panel2MouseEnter(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure SpeedButton4Click(Sender: TObject);
    procedure btn_salvarClick(Sender: TObject);
    procedure ScrollBar1Change(Sender: TObject);
    procedure FormMouseWheelDown(Sender: TObject; Shift: TShiftState;
      MousePos: TPoint; var Handled: Boolean);
    procedure FormMouseWheelUp(Sender: TObject; Shift: TShiftState;
      MousePos: TPoint; var Handled: Boolean);
    procedure Panel2MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_imaluno: Tfrm_imaluno;
  captura1:integer;
  s:integer;
  aluno, mensalidade, diaVencimento,duracao,DataFinal,DataInicio:string;

implementation

{$R *.dfm}
uses
u_dm,U_impressao_certificado, u_pesq_matricula, U_im, u_impesq, U_principalpas, U_imprime_atestado,u_impressao_notas;

procedure Tfrm_imaluno.btn_salvarClick(Sender: TObject);
var
nome,id,mae,pai,data_nasc,cidade, data,curso,carga:string;
MediaTotal:array of double;
i,y:integer;
notaMedia,total:double;
item:integer;
 begin
      if combobox1.ItemIndex<>-1 then
      begin
      item:=COMBOBOX1.ItemIndex;
       begin
       case (item) of
       0: begin
           total:=0;

            SetLength (MediaTotal, 1);

             for i:=1 to combobox1.items.Count -1 do
              begin
               notaMedia:=0;
                with dm.qmedia_notas_modulo do
                 begin
                   close;
                   sql.clear;
                   sql.add('select a.id, a.MatriculaCod, a.AvaliacaoCod, a.Nota, b.id,b.ProfessorCod,b.TurmaCod,b.Tipo,b.ModuloRef,b.descricao,b.data,b.hora,c.id,c.Nome, d.id,d.AlunoCod,e.id,e.nome,f.id_turmas,f.Turma');
                   sql.add('from notas as a, avaliacao as b, professores as c, matricula as d, alunos as e, turmas as f');
                   sql.add('where a.MatriculaCod = d.id and a.AvaliacaoCod = b.id and b.ProfessorCod = c.id and b.TurmaCod = f.id_turmas and d.AlunoCod = e.id and b.ModuloRef = :modulo and a.MatriculaCod = :idmat ');
                   parambyname('modulo').asstring:= inttostr(i);
                   parambyname('idmat').asinteger:= dm.qmatriculaid.value;
                   open;


                   if recordcount>0 then
                   begin
                   dm.qmedia_notas_modulo.first;
                   while not dm.qmedia_notas_modulo.eof do
                     begin
                       notaMedia:= notaMedia+dm.qmedia_notas_modulonota.value;
                       dm.qmedia_notas_modulo.next;
                     end;

                     notaMedia:=notaMedia/recordcount;

                    if  i=1  then
                    begin
                    MediaTotal[0]:=(notaMedia);

                    end;
                    if  i>=2  then
                    begin
                    SetLength (MediaTotal, Length(MediaTotal)+1);
                    MediaTotal[i-1]:=(notaMedia);


                    end;




                   end;

                 end;

                with dm.qmedia_notas_modulo do
                 begin
                   close;
                   sql.clear;
                   sql.add('select a.id, a.MatriculaCod, a.AvaliacaoCod, a.Nota, b.id,b.ProfessorCod,b.TurmaCod,b.Tipo,b.ModuloRef,b.descricao,b.data,b.hora,c.id,c.Nome, d.id,d.AlunoCod,e.id,e.nome,f.id_turmas,f.Turma');
                   sql.add('from notas as a, avaliacao as b, professores as c, matricula as d, alunos as e, turmas as f');
                   sql.add('where a.MatriculaCod = d.id and a.AvaliacaoCod = b.id and b.ProfessorCod = c.id and b.TurmaCod = f.id_turmas and d.AlunoCod = e.id and a.MatriculaCod = :idmat ');

                   parambyname('idmat').asinteger:= dm.qmatriculaid.value;
                   open;

                 end;
              end;

              for y:=0 to  length(MediaTotal) do
              begin
               TOTAL:=total+MediaTotal[y];
              end;

              total:= total/length(MediaTotal);
              frm_impressao_certificado.label3.caption:=(formatfloat('#,,0.00', total));





           with dm.qcertificado do
            begin
              close;
              sql.Clear;
              sql.Add('select a.id, a.nome,b.id, b.AlunoCod,b.TurmaCod, c.id_turmas, c.turma,c.DataInicio,c.DataFinal, c.CursoCod, d.CursosId, d.nome, d.CargaHoraria, d.conteudo ');
              sql.Add('from alunos as a, matricula as b, turmas as c, cursos as d');
              sql.Add('where b.AlunoCod = a.id and b.AlunoCod = a.id and b.TurmaCod = c.id_turmas and c.CursoCod = d.CursosId and b.AlunoCod = :xx and b.TurmaCod = :turmacod ');
              parambyname('xx').AsInteger:= dm.qmatriculaAlunoCod.Value;
              parambyname('turmacod').AsInteger:= dm.qmatriculaTurmaCod.Value;
              open;
            end;

          nome:=  dm.qcertificadonome.value;
          curso:=   dm.qcertificadonome_1.value  ;
          carga:=   dm.qcertificadoCargaHoraria.value  ;
          DataInicio:=  datetostr(dm.qcertificadoDataInicio.value);
          DataFinal:= datetostr(dm.qcertificadoDataFinal.value);
          frm_impressao_certificado.label1.caption:=(' Certificamos que '+nome+' participou do curso "'+curso+'", com a carga horária de '+carga+' hora(s), realizado  no período de '+DataInicio+' a '+DataFinal+'. ');

          frm_impressao_certificado.impressao_cartificado.Preview();

          end;

       1: begin
            with dm.qAtestadoFrequencia do
            begin
              close;
              sql.Clear;
              sql.Add('select a.id, a.nome, a.data_nasc,a.naturalidade, b.AlunoCod, b.f1,b.f1id,b.f2,b.f2id, c.id, c.AlunoCod,c.TurmaCod');
              sql.Add('from alunos as a, responsaveis as b, matricula as c');
              sql.Add('where a.id = :xx and c.TurmaCod = :turmcod and b.AlunoCod = a.id and c.AlunoCod = a.id');
              parambyname('xx').AsInteger:= dm.qmatriculaAlunoCod.Value;
              parambyname('turmcod').AsInteger:= dm.qmatriculaTurmaCod.Value;
              open;
            end;

            nome:=(dm.qAtestadoFrequencianome.value);
            id:=   inttostr(dm.qAtestadoFrequenciaid.value);
            mae:=   (dm.qAtestadoFrequenciaf1.value);
            pai:=   (dm.qAtestadoFrequenciaf2.value);
            data_nasc:= datetostr(dm.qAtestadoFrequenciadata_nasc.value);
            cidade:=  (dm.qAtestadoFrequencianaturalidade.value);
            data:= FormatDateTime ('yyyy',now);
            frm_imprecao_atestadof.label2.caption:=('Atestamos para os devidos fins que o estudante '+ nome +', matrícula nº '+id+', filho de '+mae+' e de '+pai+', nascido em '+data_nasc+', natural de '+cidade+', está frequentando no ano/semestre letivo de '+data+' o(s) curso(s) abaixo:');

            frm_imprecao_atestadof.imat.Preview();


          end;


       2: begin
            with dm.qcarteirinha do
            begin
              close;
              sql.Clear;
              sql.Add('select a.id, a.AlunoCod, a.TurmaCod,a.SituacaoMatricula, b.id, b.nome,b.data_nasc, c.id_turmas,c.Turma,c.CursoCod, d.CursosId, d.Nome, e.AlunoCod,e.cpf');
              sql.Add('from matricula as a, alunos as b, turmas as c, cursos as d, documentos as e');
              sql.Add('where b.id =:xx and c.id_turmas = :turmacod and a.AlunoCod = b.id and a.TurmaCod = c.id_turmas and c.CursoCod = d.CursosId and e.AlunoCod = b.id');
              parambyname('xx').AsInteger:= dm.qmatriculaAlunoCod.Value;
              parambyname('turmacod').AsInteger:= dm.qmatriculaTurmaCod.Value;
              open;
            end;

          frm_impressao_carteirinha.impressao_carteirinha.Preview();
          end;

          3: begin
            frm_impressao_contrato_matricula.rlmemo1.Lines.Add('PARTES CONTRATANTES '+#13+#13+'CONTRATANTE: _____________________________________, _________________, ________________, ________________________,'+' Carteira de Identidade nº ______________________, C.P.F. nº ________________________, residente e domiciliado na Rua ___________________________, nº ___________, bairro __________________________, '+'Cep _________________________, Cidade __________________________, no Estado __________________________; '+#13+#13+'CONTRATADA: ESCOLA DE IDIOMAS ND, com sede em Criciúma, na Rua Bota Fogo, nº 123, '+'bairro Centro, Cep 88813-310, Cidade Criciúma, no Estado Santa Catarina, inscrita no C.N.P.J. sob o nº 41.768.361/0001-60'+', e no Cadastro Estadual sob o nº 099.467.305.004, neste ato '+'representada pela sua diretora Nicolly Marques Mariano, brasileira, solteira, '+'diretora da ESCOLA DE IDIOMAS ND, Carteira de Identidade nº 39.540.487-3, C.P.F. nº 736.812.520-09, residente e domiciliado na Rua Marques, nº 123, bairro Centro, Cep 88813-310, Cidade Criciúma, no Estado Santa Catarina'+#13+#13+'As partes acima identificadas têm, entre si, justo e acertado o presente Contrato de Prestação de Serviços Educacionais'+', que se regerá pelas cláusulas seguintes e pelas condições de '+'preço, forma e termo de pagamento descritas no presente.'+#13+#13);
            frm_impressao_contrato_matricula.rlmemo1.Lines.Add('DO OBJETO DO CONTRATO'+#13+#13+'Cláusula 1ª. O presente contrato tem como OBJETO, a prestação, pela CONTRATADA, de'+' serviços educacionais, a serem realizados na ESCOLA DE IDIOMAS ND,'+' localizada na Rua Maringa,'+' nº 123, bairro Centro, Cep 88813-310, Cidade Criciúma, no Estado Santa Catarina, para o ano letivo de '+formatdatetime('yyyy', date())+','+' em favor de '+aluno+', representado neste instrumento pelo CONTRATANTE.'+#13+#13+'DA OBRIGAÇÂO DA CONTRATADA'+#13+#13+'Cláusula 2ª. É obrigatório à CONTRATADA fornecer, gratuitamente, ao aluno, certificados'+' de assiduidade e conclusão, e o material para a realização de provas.'+#13+#13);
            frm_impressao_contrato_matricula.rlmemo1.Lines.Add('DOS DESCONTOS'+#13+#13+'Cláusula 3ª. A CONTRATADA poderá, por iniciativa própria, fornecer ao aluno representado pelo CONTRATANTE, '+'descontos na mensalidade, que poderão ser retirados a partir de critérios pré-estabelecidos.'+#13+#13+'DO PAGAMENTO'+#13+#13+'Cláusula 4ª. Em virtude da prestação dos '+'serviços educacionais, o CONTRATANTE pagará à CONTRATADA a'+' quantia mensal de R$'+mensalidade+'. ');
            frm_impressao_contrato_matricula.rlmemo1.Lines.Add(#13+#13+'Cláusula 5ª. O pagamento das mensalidades escolares'+' deverá ser realizado na sede da escola, localizada '+'na Rua José Fonsceca, nº 123, bairro Centro, Cep 88813-310, Cidade de Criciúma, no Estado '+'de Santa Catarina, até o dia '+diaVencimento+' de cada mês.'+#13+#13+'DO INADIMPLEMENTO'+#13+#13+'Cláusula 6ª. Caso o CONTRATANTE não pague a mensalidade dentro do prazo estabelecido, '+'arcará com uma multa de 10% do valor da parcela, mais juros de 1% ao mês1.');
            frm_impressao_contrato_matricula.rlmemo1.Lines.Add('DA RESCISÃO'+#13+#13+'Cláusula 7ª. O presente instrumento poderá ser rescindido por qualquer das partes, sem necessidade de aviso prévio, devendo todas as parcelas estarem pagas até o dia da rescisão.');
            frm_impressao_contrato_matricula.rlmemo1.Lines.Add(#13+#13+'Cláusula 8ª. A CONTRATADA poderá rescindir o contrato, após deliberação interna, por indisciplina do aluno representado neste contrato, e por inadimplência do CONTRATANTE, o qual será previamente avisado do débito e da possível rescisão.');
            frm_impressao_contrato_matricula.rlmemo2.Lines.Add('Cláusula 9ª. Em ocorrendo a rescisão, o aluno só poderá ser desligado da instituição de ensino '+'após o término do ano letivo, obrigando-se o colégio a fornecer toda a documentação a que o estudante'+' necessite para efetuar a transferência de escola.'#13+#13+'DO PRAZO'#13+#13+'Cláusula 10ª. O presente contrato terá duração de '+duracao+' dias, iniciando-se no dia '+formatdatetime('dddddd', strtodate(datainicio))+', e terminando no dia '+formatdatetime('dddddd', strtodate(datafinal))+'.'#13+#13+'CONDIÇÕES GERAIS'#13+#13+'Cláusula 11ª. A validade deste instrumento está condicionada à realização da matrícula do aluno.'#13+#13+'Cláusula 12ª. A não freqüência do aluno nas aulas não influi na obrigatoriedade do pagamento das mensalidades.'#13+#13+'Cláusula 13ª. A CONTRATADA não se obriga a fornecer qualquer '+'tipo de material didático, que serão de inteira responsabilidade do CONTRATANTE.'#13+#13+'DO FORO'#13+#13+'Cláusula 14ª. Para dirimir quaisquer controvérsias oriundas do CONTRATO, as partes elegem o foro da comarca de Criciúma;'#13+#13+'Por estarem assim justos e contratados, firmam o presente instrumento, em duas vias de igual teor, juntamente com 2 (duas) testemunhas.');
            frm_impressao_contrato_matricula.rlmemo2.Lines.Add(#13+#13+'Criciúma, '+formatdatetime('dddddd',date())+'.');
            frm_impressao_contrato_matricula.contrato.Preview();
          end;

       end;


     end;
  end
  else
  begin
    showmessage('Selecione um documento!');
  end;


end;


procedure Tfrm_imaluno.FormCreate(Sender: TObject);
begin
  with dm.qcontrato do
  begin
    close;
    sql.clear;
    sql.add('select a.id, a.nome, b.id, b.AlunoCod, b.TurmaCod, c.MatriculaCod, c.ValorMensalidade, c.DataVencimento, c.n_parcela, d.id_turmas, d.DataInicio, d.DataFinal, d.turma');
    sql.add('from alunos as a, matricula as b, mensalidade as c, turmas as d');
    sql.add('where a.id = b.AlunoCod and  b.id = c.MatriculaCod and d.id_turmas = b.TurmaCod and c.MatriculaCod = :mat');
    parambyname('mat').asinteger:= dm.qmatriculaid.Value;
    open;

    showmessage(inttostr(recordcount));
  end;

  aluno:= dm.qcontratonome.value ;
  mensalidade:= floattostr(dm.qcontratoValormensalidade.value);
  diaVencimento:= formatdatetime('dd', dm.qcontratoDataVencimento.value);
  duracao:= inttostr(daysbetween(dm.qcontratoDatafinal.value, dm.qcontratoDatainicio.value));
  DataFinal:= datetostr(dm.qcontratoDatafinal.value);
  dataInicio:= datetostr(dm.qcontratoDatainicio.value);



 dm.qturmas.Close;
dm.tbcursos.Open();
 dm.tbcursos.First;

 while not dm.tbcursos.Eof do
 begin
 cb1.Items.Add(dm.tbcursosnome.Value);
 dm.tbcursos.Next;
 end;

 dm.tbcursos.Close;

 with dm.qturmas do
 begin
   close;
   sql.Clear;
   sql.Add('select a.id_turmas, a.CursoCod, a.Turma,a.turno, a.dataInicio, a.DataFinal, a.status, b.CursosId, b.Nome ');
   sql.Add('from turmas as a, cursos as b');
   sql.Add('where a.CursoCod = b.CursosId and a.id_turmas = :id');
   parambyname('id').AsInteger:= dm.qmatriculaTurmaCod.value;
   open;
 end;

  with dm.qcursos do
 begin
   close;
   sql.Clear;
   sql.add('select * from cursos where CursosId = :idcur');
   parambyname('idcur').AsInteger:= dm.qturmascursocod.value;
   open;
 end;

 cb1.ItemIndex:= cb1.items.IndexOf(dm.qcursosNome.Value);

 /////

 with dm.qturmas do
begin
  close;
  sql.Clear;
  sql.Add('select a.id_turmas, a.CursoCod, a.Turma,a.turno, a.dataInicio, a.DataFinal, a.status, b.CursosId, b.Nome ');
  sql.Add('from turmas as a, cursos as b');
  sql.Add('where a.CursoCod = b.CursosId and a.CursoCod = :CursoCod');
  parambyname('CursoCod').asinteger:=dm.qcursosCursosId.value;
  open;
end;

 dm.qturmas.First;
 while not dm.qturmas.Eof do
 begin
   combobox2.Items.Add(dm.qturmasturma.Value);
   dm.qturmas.next;
 end;
 dm.qturmas.Close;

 ///
 with dm.qturmas do
 begin
   close;
   sql.Clear;
   sql.Add('select a.id_turmas, a.CursoCod, a.Turma,a.turno, a.dataInicio, a.DataFinal, a.status, b.CursosId, b.Nome ');
   sql.Add('from turmas as a, cursos as b');
   sql.Add('where a.CursoCod = b.CursosId and a.id_turmas = :id');
   parambyname('id').AsInteger:= dm.qmatriculaTurmaCod.value;
   open;
 end;

 combobox2.ItemIndex:= combobox2.items.IndexOf(dm.qturmasTurma.Value);

 ////
 maskedit1.Text:= datetostr(dm.qmatriculaDataMatricula.value);
 combobox3.itemindex:= combobox3.items.indexof(dm.qmatriculaSituacaoMatricula.value);


end;


procedure Tfrm_imaluno.FormMouseWheelDown(Sender: TObject; Shift: TShiftState;
  MousePos: TPoint; var Handled: Boolean);
begin
if scrollbar1.Position<=(scrollbar1.Max-scrollbar1.PageSize) then
begin
scrollbar1.Position:=scrollbar1.Position+10;
end;
end;

procedure Tfrm_imaluno.FormMouseWheelUp(Sender: TObject; Shift: TShiftState;
  MousePos: TPoint; var Handled: Boolean);
begin
if scrollbar1.Position>0 then
begin

scrollbar1.Position:=scrollbar1.Position-10;
end;
end;

procedure Tfrm_imaluno.Panel1MouseEnter(Sender: TObject);
begin
frm_prncipal.pnl_sub_menu_alunos.Visible:=false;
frm_prncipal.pnl_sub_menu_relatorios.Visible:=false;
end;

procedure Tfrm_imaluno.Panel2MouseEnter(Sender: TObject);
begin
  frm_prncipal.pnl_sub_menu_alunos.Visible:=false;
frm_prncipal.pnl_sub_menu_relatorios.Visible:=false;
end;

procedure Tfrm_imaluno.Panel2MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
 frm_prncipal.pnl_matricula.visible:=false;
 frm_prncipal.pnl_perfil.visible:=false;
frm_prncipal.pnl_sub_menu_alunos.visible:=false;
frm_prncipal.pnl_sub_menu_avaliacoes.visible:=false;
frm_prncipal.pnl_sub_menu_cursos.visible:=false;
frm_prncipal.pnl_sub_menu_professor.visible:=false;
frm_prncipal.pnl_sub_menu_relatorios.visible:=false;
frm_prncipal.pnl_sub_menu_turmas.visible:=false;
frm_prncipal.pnl_sub_usuarios.visible:=false;
frm_prncipal.pnl_sub_menu_notas.Visible:=false;
frm_prncipal.pnl_sub_menu_notas.Visible:=false;
frm_prncipal.resultado.visible:= false;
frm_prncipal.origem.visible:= true;
end;

procedure Tfrm_imaluno.ScrollBar1Change(Sender: TObject);
begin
Panel2.Top:= -scrollbar1.position;
end;

procedure Tfrm_imaluno.SpeedButton1Click(Sender: TObject);


       begin
       if MessageDlg('Confirmar o aluno selecionado?',mtConfirmation,[mbyes, mbno],0)=mryes then
          begin

           captura1:=1;

        end;
     end;



procedure Tfrm_imaluno.SpeedButton2Click(Sender: TObject);
begin
 if (captura1=1) then
  begin
   if (MessageDlg('Você deseja mesmo cancelar?',mtConfirmation,[mbyes, mbno],0)=mryes) then
    begin

    dm.tbturma.close();
    captura1:=0
    end;
  end
  else
  showmessage('Confirme algum aluno antes de cancelar.')
end;

procedure Tfrm_imaluno.SpeedButton4Click(Sender: TObject);
begin
application.CreateForm(Tfrm_impes,  frm_impes);
 frm_impes.ShowModal;
end;

end.
